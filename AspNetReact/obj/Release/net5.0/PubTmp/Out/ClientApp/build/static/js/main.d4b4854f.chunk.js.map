{"version":3,"sources":["redux/authSlice/authSlice.js","components/NavBar/Navbar.js","Axios/AxiosInstance.js","pages/Login/Login.js","Services/LoginService.js","Services/UserService.js","pages/AdminPanel/AdminPanel.js","pages/NotFound/NotFound.js","pages/Register/Register.js","Services/GenderService.js","Services/RegisterService.js","pages/AdminLogin/AdminLogin.js","components/UI/Modal/Modal.js","pages/Profile/Profile.js","Services/AccountService.js","Services/QuoteService.js","pages/Quotes/Quotes.js","pages/EditQuote/EditQuote.js","pages/AddQuote/AddQuote.js","Services/AuthorService.js","Services/QuizService.js","components/BinaryMode/BinaryMode.js","components/MultipleMode/MultipleMode.js","pages/Quiz/Quiz.js","redux/gameSlice/gameModeSlice.js","pages/Settings/Settings.js","pages/ReviewGames/ReviewGames.js","Services/GameHistoryService.js","pages/Confirmation/Confirmation.js","App.js","redux/store.js","index.js"],"names":["initialState","isAdmin","isLoggedIn","authData","localStorage","getItem","JSON","parse","authSlice","createSlice","name","reducers","logIn","state","action","payload","setItem","stringify","token","logOut","removeItem","actions","profileUpdated","Navbar","useState","isNavBarOpen","setIsNavbarOpen","useSelector","auth","dispatch","useDispatch","history","useHistory","className","to","type","onClick","p","exact","title","replace","getInstance","isTokenRequired","headers","Authorization","instance","axios","create","baseURL","process","Login","isPending","setIsPending","useForm","register","handleSubmit","errors","formState","onSubmit","data","post","login","then","response","username","catch","error","toast","autoClose","autoComplete","spellCheck","defaultValue","placeholder","email","required","minLength","pattern","password","getAllUsers","get","sortArrayByGender","array","sort","a","b","gender","AdminPanel","doctors","setDoctors","filterWord","setFilterWord","isSortedByGender","useRef","useEffect","res","console","log","lockDoctorsProfile","id","put","lockUsersProfile","current","length","value","onChange","e","target","trim","prev","filter","d","includes","map","doctor","isLocked","NotFound","Register","genders","setGenders","registerUser","success","status","genderId","defaultChecked","index","genderType","AdminLogin","adminLogin","message","Modal","description","closeFunc","deletePatient","ReactDom","createPortal","data-dismiss","aria-label","document","getElementById","Profile","reset","modal","setModal","isDataLoaded","setIsDataLoaded","removeAccount","delete","updateProfile","push","firstname","lastname","getAllQuotes","Quotes","quotes","setQuotes","deleteQuote","deleteQuoteById","q","text","EditQuote","useParams","getQuoteById","quote","AddQuote","authors","setAuthors","authorId","author","fullName","getRandQuote","BinaryMode","setQuote","suggestedAuthor","setSuggestedAuthor","isAuthorSelected","setIsAuthorSelected","Math","floor","random","selectAnswerHandler","answer","quoteId","suggestedAuthorsId","IsAnswerYes","sendAnswerBinary","newData","authorName","realAuthorName","isAnswerCorrect","isCorrect","MultipleMode","clickAuthorHandler","sendAnswer","selectedAuthorsId","realAuthorId","Quiz","isMultipleModeEnabled","gameMode","gameModeSlice","toggleGameMode","Settings","ReviewGames","setHistory","userId","h","isCorrectAnswer","quoteText","selectedAuthorName","Confirmation","App","path","configureStore","reducer","authReducer","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.d4b4854f.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nlet initialState = {\r\n  // username: null,\r\n  isAdmin: null,\r\n  isLoggedIn: false\r\n}\r\n\r\nconst authData = localStorage.getItem('auth')\r\nif(authData){\r\n  initialState = { ...JSON.parse(authData), isLoggedIn: true }\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logIn: (state, action) => {\r\n      // state.username = action.payload.username\r\n      state.isAdmin = action.payload.isAdmin \r\n      state.isLoggedIn = true \r\n      localStorage.setItem('auth', JSON.stringify({\r\n        // username: action.payload.username,\r\n        isAdmin: action.payload.isAdmin \r\n      }))\r\n      localStorage.setItem('token', action.payload.token)\r\n    },\r\n    logOut: (state) => {\r\n      state.isLoggedIn = false \r\n      // state.username = null\r\n      state.isAdmin = null \r\n      localStorage.removeItem('auth')\r\n      localStorage.removeItem('token')\r\n    }\r\n  },\r\n})\r\n\r\nexport const { logIn, logOut, profileUpdated } = authSlice.actions\r\n\r\nexport default authSlice.reducer ","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { logOut } from '../../redux/authSlice/authSlice';\r\nimport { FiLogOut, FiMenu } from 'react-icons/fi'\r\nimport './Navbar.sass'\r\n\r\nconst Navbar = () => {\r\n\r\n  const [isNavBarOpen, setIsNavbarOpen] = useState(false)\r\n  const { isLoggedIn, isAdmin } = useSelector(state => state.auth)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const logOutHandler = ()=>{\r\n    history.replace('/')\r\n    dispatch(logOut()) \r\n  }\r\n\r\n  return (\r\n    <nav className=\"navb\">\r\n      <div className=\"nav__container\">\r\n        <Link to={ `/${isAdmin ? 'adminpanel' : 'profile'}` } className=\"navb-logo\" >\r\n          Quote Quiz Game\r\n        </Link>\r\n        <button className={`nav-toggler ${isNavBarOpen ? 'show' : ''}`} type=\"button\" onClick={ ()=>{ setIsNavbarOpen(p => !p) } } >\r\n          <FiMenu />\r\n        </button>\r\n        <div className={`nav__content ${isNavBarOpen ? 'show' : ''}`}>\r\n          <ul className=\"navbar-list\">\r\n            {\r\n              !isLoggedIn && <li className=\"nav-item\">\r\n                <NavLink to=\"/login\" className=\"nav-link\" >Login</NavLink>\r\n              </li>\r\n            }\r\n            {\r\n              !isLoggedIn && <li className=\"nav-item\">\r\n                <NavLink to=\"/adminlogin\" className=\"nav-link\" >AdminLogin</NavLink>\r\n              </li>\r\n            }\r\n            {\r\n              isLoggedIn && isAdmin && <>\r\n                <li className=\"nav-item\">\r\n                  <NavLink to=\"/quotes\" className=\"nav-link\" >Quotes</NavLink>\r\n                </li>\r\n              </>\r\n            }\r\n            {\r\n              isLoggedIn && isAdmin && <>\r\n                <li className=\"nav-item\">\r\n                  <NavLink to=\"/adminpanel\" className=\"nav-link\" >Users</NavLink>\r\n                </li>\r\n              </>\r\n            }\r\n            {\r\n              isLoggedIn && <>\r\n                {\r\n                  !isAdmin && <li className=\"nav-item\">\r\n                    <NavLink to=\"/\" exact className=\"nav-link\">Quiz</NavLink>\r\n                  </li>\r\n                }\r\n                {\r\n                  !isAdmin && <li className=\"nav-item\">\r\n                    <NavLink to=\"/settings\" className=\"nav-link\">Settings Page</NavLink>\r\n                  </li>\r\n                }\r\n                {\r\n                  !isAdmin && <li className=\"nav-item\">\r\n                    <NavLink to=\"/profile\" className=\"nav-link\">Profile</NavLink>\r\n                  </li>\r\n                }\r\n                <li className=\"nav-item\">\r\n                  <button className=\"logout-btn\" title=\"LogOut\" onClick={ logOutHandler }>\r\n                  <FiLogOut /> Logout</button>\r\n                </li>\r\n              </>\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n \r\nexport default Navbar;","import axios from \"axios\"\r\n\r\nconst baseURL = process.env.REACT_APP_HOSTNAME\r\n\r\n\r\nexport const getInstance = (isTokenRequired = false)=>{\r\n\r\n  const headers = { }\r\n\r\n  if(isTokenRequired && localStorage.token){\r\n    headers.Authorization = `Bearer ${localStorage.token}`\r\n  }\r\n\r\n  const instance = axios.create({\r\n    baseURL,\r\n    headers\r\n  })\r\n\r\n\r\n  return instance;\r\n}","import { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { logIn } from '../../redux/authSlice/authSlice';\r\nimport { VscLoading } from 'react-icons/vsc'\r\nimport { useState } from 'react';\r\nimport { login } from '../../Services/LoginService';\r\nimport './Login.sass'\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const [isPending, setIsPending] = useState(false)\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const formSubmitHandler = (data)=>{\r\n    setIsPending(true)\r\n    login(data)\r\n      .then((response)=>{\r\n        dispatch(logIn({ username: response.data.username, isAdmin: response.data.isAdmin, token: response.data.token }))\r\n        history.replace('/')\r\n      })\r\n      .catch((error)=>{\r\n        setIsPending(false)\r\n        toast.error(error.response.data, {\r\n          autoClose: 1500\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    <main className=\"login\">\r\n      <div className=\"login__content\">\r\n        <h3 className=\"login__title\">Sign In</h3>\r\n        <form onSubmit={handleSubmit(formSubmitHandler) } className=\"login__form\" autoComplete=\"off\" spellCheck=\"false\">\r\n          <div className=\"login__inp-wr\">\r\n            <input type=\"text\" defaultValue=\"khvicha@gmail.com\" placeholder=\"Email\" className={`${ errors.email && 'is-invalid' }`} {...register(\"email\", { required: true, minLength: 4, pattern: /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g })}  />\r\n          </div>\r\n          <div className=\"login__inp-wr\">\r\n            <input type=\"password\" defaultValue=\"abc123\" placeholder=\"Password\" className={`${ errors.password && 'is-invalid' }`}  {...register(\"password\", { required: true, minLength: 5 })} />\r\n          </div>\r\n          <button type=\"submit\" className=\"login__submit\" >Log In{ isPending && <span className=\"login__spinner\"><VscLoading /></span> }</button>\r\n        </form>\r\n        <div className=\"login__footer\">\r\n          <Link to=\"/adminlogin\" className=\"login__admin-lnk\">Login as Admin</Link>\r\n          <Link to=\"/register\" className=\"login__register-lnk\">Register</Link>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n \r\nexport default Login;","import { getInstance } from \"../Axios/AxiosInstance\"\r\n\r\nexport const adminLogin = (data)=>{\r\n  return getInstance().post('/api/account/adminlogin', data)\r\n}\r\n\r\nexport const login = (data)=>{\r\n  return getInstance().post('/api/account/login', data)\r\n}\r\n","import { getInstance } from \"../Axios/AxiosInstance\"\r\n\r\nexport const getAllUsers = ()=>{\r\n  return getInstance(true).get(`/api/users`)\r\n}\r\n\r\nexport const lockUsersProfile = (id)=>{\r\n  return getInstance(true).put(`/api/account/LockUserProfile/${id}`)\r\n}","import { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllUsers, lockUsersProfile } from '../../Services/UserService';\r\nimport './AdminPanel.sass'\r\n\r\nconst sortArrayByGender = (array)=>{\r\n  const sorted = array.sort(function(a,b){\r\n    if(a.gender < b.gender){\r\n      return -1;\r\n    }\r\n    else if(a.gender > b.gender){\r\n      return 1;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  })\r\n  return sorted;\r\n}\r\n\r\nconst AdminPanel = () => {\r\n\r\n  const { token } = useSelector(state => state.auth)\r\n  const [doctors, setDoctors] = useState([])\r\n  const [filterWord, setFilterWord] = useState('')\r\n  const isSortedByGender = useRef(false)\r\n\r\n  useEffect(()=>{\r\n    getAllUsers()\r\n      .then(res => {\r\n        setDoctors(res.data)\r\n      })\r\n      .catch(error=>{\r\n        console.log(error.response)\r\n      })\r\n  }, [token])\r\n\r\n  const lockDoctorsProfile = (id) => {\r\n    lockUsersProfile(id)\r\n      .then((res) => {\r\n        getAllUsers()\r\n          .then(res => {\r\n            setDoctors(isSortedByGender.current ? sortArrayByGender(res.data) : res.data)\r\n          })\r\n          .catch(error=>{\r\n            console.log(error.response)\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n\r\n  const sortByGender = ()=>{\r\n    setDoctors(prev => sortArrayByGender([...prev]))\r\n    isSortedByGender.current = true \r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-panel-wr\">\r\n    \r\n    <div className='admin-panel'>\r\n\r\n      <div className=\"admin-bottom\">\r\n        {\r\n          !!doctors.length && <>\r\n            <div className=\"admin-input-wr\">\r\n              <input spellCheck=\"false\" type=\"text\" placeholder=\"Filter Users...\" value={filterWord} onChange={ (e)=> setFilterWord(e.target.value.trim()) } />\r\n              <button className=\"admin__clear-btn\" onClick={ () => setFilterWord('') }>Clear Input</button>\r\n              <button className=\"admin__sort-btn\" onClick={ sortByGender }>Sort By Gender{ isSortedByGender.current ? '(sorted)' : '' }</button>\r\n            </div>\r\n            <ul className=\"admin-list\">\r\n              { doctors.filter(d => d.username.includes(filterWord)).map((doctor)=> (\r\n                <li className=\"admin-list-item\" key={ doctor.id }>\r\n                  <div className=\"admin-list-item-lnk\">\r\n                    <h5 className=\"admin-list-item-name\">{ doctor.username }</h5>\r\n                    <span>{ doctor.gender }</span>\r\n                    <Link to={`/reviewgames/${doctor.id}`}>Review user's game</Link>\r\n                    <button onClick={ ()=> lockDoctorsProfile(doctor.id)} className={ `admin-list-item-status ${ doctor.isLocked ? 'inactive' : ''}`}>{ doctor.isLocked ? 'Enable Account' : 'Disable Account' }</button>\r\n                  </div>\r\n                </li>)) \r\n              }\r\n            </ul>\r\n          </>\r\n        }\r\n      </div>\r\n    </div>\r\n    </div> \r\n  );\r\n} \r\n \r\nexport default AdminPanel;","import './NotFound.sass'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"bubble\"></div>\r\n        <div className=\"main\">\r\n          <h1>404</h1>\r\n          <p>It looks like you're lost...<br/>That's a trouble?</p>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default NotFound;","import { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { VscLoading } from \"react-icons/vsc\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getAllGenders } from \"../../Services/GenderService\";\r\nimport { registerUser } from \"../../Services/RegisterService\";\r\nimport './Register.sass'\r\n\r\nconst Register = () => {\r\n\r\n  const [isPending, setIsPending] = useState(false)\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const [ genders, setGenders ] = useState([])\r\n\r\n  const history = useHistory()\r\n\r\n  const formSubmitHandler = (data)=>{\r\n    setIsPending(true)\r\n    registerUser(data)\r\n      .then(()=>{\r\n        toast.success('Registered Successfully', {\r\n          autoClose: 1500\r\n        })\r\n        history.replace('/noconfirmation')\r\n      })\r\n      .catch((error)=>{\r\n        setIsPending(false)\r\n        if(error.response.status === 400){\r\n          toast.error('User already exists', {\r\n            autoClose: 1500\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getAllGenders()\r\n      .then((response)=>{\r\n        setGenders(response.data)\r\n      })\r\n      .catch((error)=>{\r\n        console.log(error.response)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <main className=\"register\">\r\n      <div className=\"register__content\">\r\n        <h3 className=\"register__title\">Register</h3>\r\n        <form onSubmit={handleSubmit(formSubmitHandler) } className=\"register__form\" autoComplete=\"off\" spellCheck=\"false\">\r\n          <div className=\"register__inp-wr\">\r\n            <label>Email</label>\r\n            <input type=\"text\"  className={`${ errors.email && 'is-invalid' }`}  {...register(\"email\", { required: true, minLength: 4, pattern: /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g })} />\r\n          </div>\r\n          <div className=\"register__inp-wr\">\r\n            <label>Password</label>\r\n            <input type=\"password\"  className={`${ errors.password && 'is-invalid' }`} {...register(\"password\", { required: true, minLength: 5 })} />\r\n          </div>\r\n          <div className=\"register__inp-wr\">\r\n            <label>Gender</label>\r\n            <select className={`${ errors.genderId && 'is-invalid' }`} {...register(\"genderId\", { required: true })}>\r\n              <option value=\"\" defaultChecked>Choose</option>\r\n              { !!genders.length && genders.map((gender, index)=> <option key={index} value={ gender.id }>{ gender.genderType }</option>) }\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" className=\"register__submit\" >Register{ isPending && <span className=\"register__spinner\" ><VscLoading /></span> }</button>\r\n        </form>\r\n        <div className=\"register__footer\"><Link to=\"/\" className=\"register__back-lnk\">Cancel</Link></div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n \r\nexport default Register;","import { getInstance } from \"../Axios/AxiosInstance\"\r\n\r\nexport const getAllGenders = ()=>{\r\n  return getInstance(true).get('/api/genders')\r\n}","import { getInstance } from \"../Axios/AxiosInstance\"\r\n\r\nexport const registerUser = (data)=>{\r\n  return getInstance().post('/api/account/register', data)\r\n} ","import { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { logIn } from '../../redux/authSlice/authSlice';\r\nimport { useState } from 'react';\r\nimport { VscLoading } from 'react-icons/vsc'\r\nimport { adminLogin } from '../../Services/LoginService';\r\nimport './AdminLogin.sass'\r\n\r\n\r\nconst AdminLogin = () => {\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const [isPending, setIsPending] = useState(false)\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const formSubmitHandler = data =>{\r\n    setIsPending(true)\r\n    adminLogin(data)\r\n      .then((response)=>{\r\n        dispatch(logIn({ username: response.data.username, isAdmin: response.data.isAdmin, token: response.data.token }))\r\n        history.replace(response.data.isAdmin ? '/adminpanel' : '/')\r\n      })\r\n      .catch((error)=>{\r\n        setIsPending(false)\r\n        toast.error(error.response.data.message, {\r\n          autoClose: 1500\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <main className=\"adminlogin\">\r\n      <div className=\"adminlogin__content\">\r\n        <h3 className=\"adminlogin__title\">Admin</h3>\r\n        <form onSubmit={handleSubmit(formSubmitHandler) } className=\"adminglogin__form\" autoComplete=\"off\" spellCheck=\"false\">\r\n          <div className=\"adminlogin__inp-wr\">\r\n            <input type=\"text\" defaultValue=\"admin@gmail.com\" placeholder=\"Email\" className={`${ errors.email && 'is-invalid' }`} {...register(\"email\", { required: true, minLength: 4, pattern: /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i })}  />\r\n          </div>\r\n          <div className=\"adminlogin__inp-wr\">\r\n            <input type=\"password\" defaultValue=\"abc123\" placeholder=\"Password\" className={`${ errors.password && 'is-invalid' }`}  {...register(\"password\", { required: true, minLength: 5 })} />\r\n          </div>\r\n          <button type=\"submit\" className=\"adminlogin__submit-btn\" >Log In{isPending && <span className=\"adminpanel__spinner\" ><VscLoading /></span> }</button>\r\n        </form>\r\n        <div className=\"adminlogin__footer\"><Link to=\"/\" className=\"adminlogin__login-lnk\">Back</Link></div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n \r\nexport default AdminLogin;","import ReactDom from 'react-dom'\r\nimport './Modal.sass'\r\n\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\n\r\nconst Modal = ({ description, closeFunc, deletePatient }) => {\r\n  return (\r\n    <>\r\n      {\r\n        ReactDom.createPortal(<div className=\"modal show fade\">\r\n        <div className=\"modal\" >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <button onClick={ closeFunc } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><FaTimes /></button>\r\n                {/* <button type=\"button\" className=\"btn-close\" onClick={ closeFunc }>&times;</button> */}\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p>{ description }</p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"modal-footer-delete\" onClick={ deletePatient }>Yes</button>\r\n                <button type=\"button\" className=\"modal-footer-cancel\" onClick={ closeFunc }>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-backdrop fade show\"></div></div>,\r\n        document.getElementById(\"patient-modal\"))\r\n      }\r\n    </>\r\n  );\r\n}\r\n \r\nexport default Modal;","import Modal from \"../../components/UI/Modal/Modal\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { logOut } from \"../../redux/authSlice/authSlice\";\r\nimport { deleteAccount, getProfileInfo, updateProfile } from \"../../Services/AccountService\";\r\nimport './Profile.sass'\r\n\r\nconst Profile = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const { register, handleSubmit, reset, formState: { errors } } = useForm();\r\n  const [modal, setModal] = useState()\r\n  const history = useHistory()\r\n\r\n  const [isDataLoaded, setIsDataLoaded] = useState(false) \r\n\r\n  const formSubmitHandler = (data)=>{\r\n    updateProfile(data)\r\n      .then(()=>{\r\n        history.push(\"/profile\")\r\n        toast.success('Profile Updated Successfully', {autoClose: 1000})\r\n      })\r\n      .catch(()=>{\r\n        toast.error(\"Invalid Password!\", {autoClose: 1000})\r\n      })\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    getProfileInfo()\r\n      .then((res)=>{\r\n        reset(res.data);\r\n        setIsDataLoaded(true)\r\n      })\r\n      .catch((error)=>{\r\n        console.log(error.response) \r\n      })\r\n  }, [reset])\r\n\r\n\r\n  const removeAccount = ()=>{\r\n    deleteAccount()\r\n      .then((res)=>{\r\n        dispatch(logOut())\r\n        history.replace('/')\r\n        toast.success(\"Account Deleted!\", {autoClose: 1000})\r\n      })\r\n      .catch(()=>{\r\n        toast.error(\"Invalid Password!\", {autoClose: 1000})\r\n      })\r\n  }\r\n\r\n  const deleteAccountHandler = ()=>{\r\n    setModal({\r\n      title: 'Delete Account',\r\n      description: 'Do you want to delete account?',\r\n      closeFunc: ()=> setModal(null),\r\n      deletePatient: removeAccount,\r\n    })\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      { modal && <Modal {...modal} /> }\r\n      <button className=\"profile__delete-btn\" onClick={ deleteAccountHandler }>Delete Account</button>\r\n      {\r\n        isDataLoaded && \r\n        <form onSubmit={handleSubmit(formSubmitHandler) } autoComplete=\"off\" spellCheck=\"false\">\r\n          <input type=\"hidden\"  className={`form-control disabled ${ errors.username && 'is-invalid' }`} {...register(\"username\", { required: true, minLength: 4, pattern: /^[\\S]+$/i })} />\r\n          <div className=\"profile__inp-wr\">\r\n            <label className=\"form-label\">FirstName</label>\r\n            <input type=\"text\" className={`form-control ${ errors.firstname && 'is-invalid' }`} {...register(\"firstname\", { required: true, minLength: 2 })} />\r\n          </div>\r\n          <div className=\"profile__inp-wr\">\r\n            <label className=\"form-label\">LastName</label>\r\n            <input type=\"text\" className={`form-control ${ errors.lastname && 'is-invalid' }`}  {...register(\"lastname\", { required: true, minLength: 4 })} />\r\n          </div>\r\n          <div className=\"profile__inp-wr\">\r\n            <label className=\"form-label\">Confirm Password</label>\r\n            <input type=\"password\" className={`form-control ${ errors.password && 'is-invalid' }`}  {...register(\"password\", { required: true, minLength: 5 })} />\r\n          </div>\r\n          <button type=\"submit\" className=\"profile-save\">Update</button>\r\n          <Link to=\"/\" className=\"profile-cancel\">Cancel</Link> \r\n        </form>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Profile;","import { getInstance } from \"../Axios/AxiosInstance\"\r\n\r\n\r\nexport const updateProfile = (data)=>{\r\n  return getInstance(true).put('/api/account/updateprofile', data)\r\n}\r\n\r\n\r\nexport const getProfileInfo = ()=>{\r\n  return getInstance(true).get('/api/account/getprofileinfo')\r\n}\r\n\r\n\r\nexport const deleteAccount = ()=>{\r\n  return getInstance(true).delete('/api/account/delete')\r\n}\r\n\r\n","import { getInstance } from \"../Axios/AxiosInstance\"\r\n\r\n\r\n\r\n\r\nexport const getQuoteById = (id)=>{\r\n  return getInstance(true).get(`/api/quotes/${id}`)\r\n}\r\n\r\nexport const getAllQuotes = ()=>{\r\n  return getInstance(true).get('/api/quotes')\r\n}\r\n\r\nexport const deleteQuoteById = (id)=>{\r\n  return getInstance(true).delete(`/api/quotes/${id}`)\r\n}\r\n\r\nexport const updateQuote = (quote)=>{\r\n  return getInstance(true).put(`/api/quotes`, quote)\r\n}\r\n\r\nexport const addNewQuote = (quote)=>{\r\n  return getInstance(true).post(`/api/quotes`, quote)\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteQuoteById, getAllQuotes } from \"../../Services/QuoteService\";\r\nimport './Quotes.sass'\r\n\r\nconst Quotes = () => {\r\n  \r\n  const [quotes, setQuotes] = useState([])\r\n\r\n  useEffect(()=>{\r\n    getAllQuotes()\r\n      .then(res => {\r\n        setQuotes(res.data)\r\n      })\r\n      .catch(error=>{\r\n        console.log(error.response)\r\n      })\r\n  }, [])\r\n\r\n\r\n  const deleteQuote = (id)=>{\r\n    deleteQuoteById(id)\r\n      .then(() => {\r\n        getAllQuotes()\r\n          .then(res => {\r\n            setQuotes(res.data)\r\n          })\r\n          .catch(error=>{\r\n            console.log(error.response)\r\n          })\r\n      })\r\n      .catch(error=>{\r\n        console.log(error.response)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"quotes\">\r\n      <Link className=\"quotes__add\" to=\"/addquote\">Add Quote</Link>\r\n      <ul className=\"quotes__list\">\r\n        {\r\n          !!quotes.length && quotes.map(q => <li key={q.id} className=\"quotes__list-item\">\r\n            <q className=\"quotes__list-item-txt\">{ q.text }</q>\r\n            <div className=\"quotes__list-item-footer\">\r\n              <Link to={`/editquote/${q.id}`}>Edit</Link>\r\n              <button onClick={ ()=>{ deleteQuote(q.id) } } >Delete</button>\r\n            </div>\r\n          </li>)\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Quotes;","import { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getQuoteById, updateQuote } from \"../../Services/QuoteService\";\r\nimport './EditQuote.sass'\r\n\r\nconst EditQuote = () => {\r\n\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const { register, handleSubmit, reset, formState: { errors } } = useForm();\r\n\r\n  useEffect(()=>{\r\n    getQuoteById(id)\r\n      .then(res => {\r\n        reset(res.data);\r\n      })\r\n      .catch(error=>{\r\n        console.log(error.response)\r\n      })\r\n  }, [id, reset])\r\n\r\n  const formSubmitHandler = (data)=>{\r\n    updateQuote(data)\r\n      .then((res)=>{\r\n        toast.success('Operation Completed Successfully', {autoClose: 1000})\r\n        history.replace('/quotes')\r\n      })\r\n      .catch((res)=>{\r\n        console.log(res)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"quoteedit\">\r\n      <form className=\"quoteedit__form\" onSubmit={handleSubmit(formSubmitHandler) } autoComplete=\"off\" spellCheck=\"false\">\r\n        <div className=\"quoteedit__inp-wr\">\r\n          <label>Edit Quote</label>\r\n          <textarea type=\"text\" className={`${ errors.text && 'is-invalid' }`} {...register(\"text\", { required: true, minLength: 2 })}></textarea>\r\n        </div>\r\n        <button type=\"submit\" className=\"quoteedit__save\">Update</button>\r\n        <Link to=\"/quotes\" className=\"quoteedit__cancel\">Back</Link> \r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default EditQuote;","import { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getAllAuthors } from \"../../Services/AuthorService\";\r\nimport { addNewQuote } from \"../../Services/QuoteService\";\r\nimport './AddQuote.sass'\r\n\r\n\r\nconst AddQuote = () => {\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const [authors, setAuthors] = useState([])\r\n  const history = useHistory()\r\n\r\n\r\n  const formSubmitHandler = (data)=>{\r\n    addNewQuote(data)\r\n      .then(()=>{\r\n        toast.success('Operation Completed Successfully', {autoClose: 1000})\r\n        history.replace('/quotes')\r\n      })\r\n      .catch((res)=>{\r\n        console.log(res)\r\n      })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getAllAuthors()\r\n      .then(res => {\r\n        setAuthors(res.data);\r\n      })\r\n      .catch(error=>{\r\n        console.log(error.response)\r\n      }) \r\n  }, [])\r\n  \r\n\r\n  return (\r\n    <div className=\"addquote\">\r\n      <form className=\"addquote__form\" onSubmit={handleSubmit(formSubmitHandler) } autoComplete=\"off\" spellCheck=\"false\">\r\n        <div className=\"addquote__inp-wr\">\r\n          <label>Add New Quote</label>\r\n          <textarea type=\"text\" className={`${ errors.text && 'is-invalid' }`} {...register(\"text\", { required: true, minLength: 2 })}></textarea>\r\n        </div>\r\n        <div className=\"addquote__inp-wr\">\r\n          <label>Author</label>\r\n          <select className={`${ errors.authorId && 'is-invalid' }`} {...register(\"authorId\", { required: true })}>\r\n            <option value=\"\" defaultChecked>Choose</option>\r\n            { !!authors.length && authors.map((author, index)=> <option key={index} value={ author.id }>{ author.fullName }</option>) }\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" className=\"addquote__save\">Add</button>\r\n        <Link to=\"/quotes\" className=\"addquote__cancel\">Cancel</Link> \r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default AddQuote;","import { getInstance } from \"../Axios/AxiosInstance\"\r\n\r\n\r\nexport const getAllAuthors = ()=>{\r\n  return getInstance(true).get('/api/authors')\r\n}","import { getInstance } from \"../Axios/AxiosInstance\"\r\n\r\nexport const getRandQuote = ()=>{\r\n  return getInstance(true).get('/api/quiz/rand')\r\n}\r\n\r\nexport const sendAnswer = (data)=>{\r\n  return getInstance(true).post('/api/quiz/answer', data)\r\n}\r\n\r\n\r\nexport const sendAnswerBinary = (data)=>{\r\n  return getInstance(true).post('/api/quiz/answerbinary', data)\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getRandQuote, sendAnswerBinary } from \"../../Services/QuizService\"\r\nimport './BinaryMode.sass'\r\n\r\nconst BinaryMode = () => {\r\n  const [quote, setQuote] = useState()\r\n  const [suggestedAuthor, setSuggestedAuthor] = useState()\r\n  const [isAuthorSelected, setIsAuthorSelected] = useState()\r\n  \r\n  useEffect(()=>{\r\n    getRandQuote()\r\n      .then((res)=>{\r\n        setQuote(res.data.quote)\r\n        setSuggestedAuthor(res.data.authors[Math.floor(Math.random()*3)])\r\n      })\r\n      .catch((res)=>{\r\n        console.log(res)\r\n      })\r\n  }, [])\r\n \r\n\r\n  const selectAnswerHandler = (answer)=>{\r\n    if(isAuthorSelected)\r\n      return\r\n    const data = {\r\n      quoteId: quote.id,\r\n      suggestedAuthorsId: suggestedAuthor.id,\r\n    }\r\n    data.IsAnswerYes = answer\r\n    sendAnswerBinary(data)\r\n      .then(res => {\r\n        const newData = {\r\n          authorName: res.data.realAuthorName,\r\n        }\r\n        if(res.data.isAnswerCorrect){\r\n          newData.isCorrect = true;\r\n          newData.message = `Correct! The right answer is: \"${res.data.realAuthorName}\"`;\r\n        } else {\r\n          newData.isCorrect = false;\r\n          newData.message = `Sorry, you are wrong! The right answer is: \"${res.data.realAuthorName}\"`;\r\n        }\r\n        setIsAuthorSelected(newData)\r\n      })\r\n      .catch(res => {\r\n        console.log(res)\r\n      })\r\n  }\r\n\r\n  const getNextQuoteHandler = ()=>{\r\n    getRandQuote()\r\n      .then((res)=>{\r\n        setQuote(res.data.quote)\r\n        setSuggestedAuthor(res.data.authors[Math.floor(Math.random()*3)])\r\n        setIsAuthorSelected(null)\r\n      })\r\n      .catch((res)=>{\r\n        console.log(res)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"binary-mode\">\r\n      <h3 className=\"binary-mode__title\">Who said it?</h3>\r\n      { isAuthorSelected ? <p className={`binary-mode__message ${ !isAuthorSelected.isCorrect ? 'incorrect': ''}`}>{ isAuthorSelected ? isAuthorSelected.message : null }</p> : null }\r\n      { quote && <q className=\"binary-mode__text\">{quote.text}</q> }\r\n      { !isAuthorSelected ? <h3 className=\"binary-mode__question\">{ suggestedAuthor && suggestedAuthor.fullName }?</h3> : null } \r\n      { !isAuthorSelected ? <div className=\"binary-mode__btns\">\r\n          <button className=\"binary-mode__yesbtn\" onClick={()=>{ selectAnswerHandler(true) }}>Yes</button>\r\n          <button className=\"binary-mode__nobtn\" onClick={()=>{ selectAnswerHandler(false) }}>No</button>\r\n        </div> : null\r\n      }\r\n      { isAuthorSelected ? <p className=\"binary-mode__author\">Author: <span>{isAuthorSelected.authorName}</span></p>  : null }\r\n      { isAuthorSelected && <div className=\"binary-mode__nextbtn-wr\"><button className=\"binary-mode__nextbtn\" onClick={ getNextQuoteHandler }>Next</button></div>  } \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default BinaryMode;","import { useEffect, useState } from \"react\"\r\nimport { getRandQuote, sendAnswer } from \"../../Services/QuizService\"\r\nimport { BsArrowRightShort } from 'react-icons/bs'\r\nimport './MultipleMode.sass'\r\n\r\nconst MultipleMode = () => {\r\n\r\n  const [quote, setQuote] = useState()\r\n  const [authors, setAuthors] = useState()\r\n  const [isAuthorSelected, setIsAuthorSelected] = useState()\r\n\r\n  useEffect(()=>{\r\n    getRandQuote()\r\n      .then((res)=>{\r\n        setQuote(res.data.quote)\r\n        setAuthors(res.data.authors)\r\n      })\r\n      .catch((res)=>{\r\n        console.log(res)\r\n      })\r\n  }, [])\r\n\r\n  const showNextQuoteHandler = ()=>{\r\n    getRandQuote()\r\n      .then((res)=>{\r\n        setQuote(res.data.quote)\r\n        setAuthors(res.data.authors)\r\n        setIsAuthorSelected(null)\r\n      })\r\n      .catch((res)=>{\r\n        console.log(res)\r\n      })\r\n\r\n  }\r\n\r\n  const clickAuthorHandler = (id)=>{\r\n    if(isAuthorSelected)\r\n      return\r\n\r\n    const data = {\r\n      quoteId: quote.id,\r\n      selectedAuthorsId: id,\r\n    }\r\n\r\n    sendAnswer(data)\r\n      .then((res)=>{\r\n        const newData = {\r\n          authorName: res.data.realAuthorName,\r\n          authorId: res.data.realAuthorId,\r\n          selectedAuthorsId: id,\r\n        }\r\n        if(res.data.isAnswerCorrect){\r\n          newData.isCorrect = true;\r\n          newData.message = `Correct! The right answer is: ${res.data.realAuthorName}`;\r\n        } else {\r\n          newData.isCorrect = false;\r\n          newData.message = `Sorry, you are wrong! The right answer is: ${res.data.realAuthorName}`;\r\n        }\r\n        setIsAuthorSelected(newData)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"multiple-mode\">\r\n       <h3 className=\"multiple-mode__title\">Who said it?</h3>\r\n       { isAuthorSelected ? <p className={`multiple-mode__message ${ !isAuthorSelected.isCorrect ? 'incorrect': ''}`}>{ isAuthorSelected ? isAuthorSelected.message : null }</p> : null }\r\n        { quote && <q className=\"multiple-mode__text\">{quote.text}</q> }\r\n        {\r\n          authors && <ul className=\"multiple-mode__options\">\r\n            { authors.map(a => <li key={a.id} className={ `multiple-mode__option \r\n            ${ isAuthorSelected && (isAuthorSelected.authorId === a.id) ? 'correct-answer' : '' } \r\n            ${ isAuthorSelected && (isAuthorSelected.selectedAuthorsId === a.id) && !isAuthorSelected.isCorrect ? 'incorrect-answer' : '' }`} onClick={()=> clickAuthorHandler(a.id)}><BsArrowRightShort /> { a.fullName }</li>) }\r\n          </ul>\r\n        }\r\n      { isAuthorSelected ? <p className=\"multiple-mode__author\">Author: <span>{isAuthorSelected.authorName}</span></p>  : null }\r\n      { isAuthorSelected && <div className=\"multiple-mode__nextbtn-wr\"><button className=\"multiple-mode__nextbtn\" onClick={ showNextQuoteHandler }>Next</button></div>  } \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default MultipleMode;","import BinaryMode from \"../../components/BinaryMode/BinaryMode\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MultipleMode from \"../../components/MultipleMode/MultipleMode\";\r\nimport './Quiz.sass'\r\n\r\nconst Quiz = () => {\r\n\r\n  const isMultipleModeEnabled = useSelector(state => state.gameMode.isMultipleModeEnabled)\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      { isMultipleModeEnabled ? <MultipleMode /> : <BinaryMode /> }\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Quiz;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nlet initialState = {\r\n  isMultipleModeEnabled: false,\r\n}\r\n\r\nconst gameModeData = localStorage.getItem('multipleMode')\r\nif(gameModeData){\r\n  initialState.isMultipleModeEnabled = true\r\n}\r\n\r\nexport const gameModeSlice = createSlice({\r\n  name: 'gamemode',\r\n  initialState,\r\n  reducers: {\r\n    toggleGameMode: (state) => {\r\n      state.isMultipleModeEnabled = !state.isMultipleModeEnabled\r\n\r\n      if(state.isMultipleModeEnabled){\r\n        localStorage.setItem('multipleMode', 'true')\r\n      }else {\r\n        localStorage.removeItem('multipleMode')\r\n      }\r\n    }\r\n  },\r\n})\r\n\r\nexport const { toggleGameMode } = gameModeSlice.actions\r\n\r\nexport default gameModeSlice.reducer  ","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleGameMode } from \"../../redux/gameSlice/gameModeSlice\";\r\nimport './Settings.sass'\r\n\r\nconst Settings = () => {\r\n  const isMultipleModeEnabled = useSelector(state => state.gameMode.isMultipleModeEnabled)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <h3 className=\"settings__title\">Change Game Mode</h3>\r\n      <div className=\"settings__switch-options\">\r\n        <span className={`settings__switch-option ${ !isMultipleModeEnabled ? 'active' : '' }`}>Binary</span>\r\n        <div className=\"settings__switch\" onClick={()=>{ dispatch(toggleGameMode()) }}>\r\n          <span className={`settings__switch-slider ${ isMultipleModeEnabled ? 'multiple' : '' }`}></span>\r\n        </div>\r\n        <span className={`settings__switch-option ${ isMultipleModeEnabled ? 'active' : '' }`}>Multiple</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Settings;","import { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getGameHistory } from \"../../Services/GameHistoryService\";\r\nimport './ReviewGames.sass'\r\n\r\nconst ReviewGames = () => {\r\n\r\n  const { id } = useParams()\r\n  const [history, setHistory] = useState([])\r\n  const isDataLoaded = useRef(false)\r\n\r\n  useEffect(()=>{\r\n    getGameHistory(id)\r\n      .then(res =>{\r\n        isDataLoaded.current = true;\r\n        setHistory(res.data)\r\n      })\r\n  }, [id])\r\n\r\n  return (\r\n    <div className=\"review-game\">\r\n      <Link to=\"/adminpanel\" className=\"review-game__back\">Back</Link>\r\n        {\r\n          !!history.length && <ul className=\"review-game__list\">\r\n            {\r\n              history.map(h => (\r\n                <li key={ h.id } className={`review-game__list-item ${ h.isCorrectAnswer ? '' : 'incorrect' }`}>\r\n                  <q className=\"review-game__txt\">{ h.quoteText }</q>\r\n                  <p className=\"review-game__author\">Author: <span>{h.realAuthorName}</span></p>\r\n                  <span className=\"review-game__mode\">Mode: {h.selectedAuthorName ? 'Multiple' : \"Binary\"}</span>\r\n                </li>)\r\n              )\r\n            }\r\n            </ul> \r\n        }\r\n        { isDataLoaded.current && !history.length && <h3 className=\"review-game__nohistory\">No History</h3> }\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default ReviewGames;","import { getInstance } from \"../Axios/AxiosInstance\"\r\n\r\n\r\nexport const getGameHistory = (userId)=>{\r\n  return getInstance(true).get(`/api/users/gamehistory/${userId}`)\r\n}\r\n\r\n\r\n","import './Confirmation.sass'\r\nimport { ImWarning } from 'react-icons/im';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Confirmation = () => {\r\n  return (\r\n    <div className=\"confir\">\r\n      <div className=\"confir__content\">\r\n        <div className=\"confir__icon\"><ImWarning /></div>\r\n        <p className=\"confir__message\"><span>Please Note:</span> Email Confirmation is not Implemented. You Can Log In without Email Confirmation.</p>\r\n        <Link className=\"confir__login\" to=\"/\">Login</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Confirmation;","import { useSelector } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Navbar from './components/NavBar/Navbar';\nimport Login from './pages/Login/Login';\nimport AdminPanel from './pages/AdminPanel/AdminPanel';\nimport './App.sass';\nimport NotFound from './pages/NotFound/NotFound';\nimport Register from './pages/Register/Register';\nimport AdminLogin from './pages/AdminLogin/AdminLogin';\nimport Profile from './pages/Profile/Profile';\nimport { ToastContainer } from 'react-toastify';\nimport Quotes from './pages/Quotes/Quotes';\nimport EditQuote from './pages/EditQuote/EditQuote';\nimport AddQuote from './pages/AddQuote/AddQuote';\nimport Quiz from './pages/Quiz/Quiz';\nimport Settings from './pages/Settings/Settings';\nimport ReviewGames from './pages/ReviewGames/ReviewGames';\nimport Confirmation from './pages/Confirmation/Confirmation';\n\nconst App = ()=>{ \n\n  const { isLoggedIn, isAdmin } = useSelector(state => state.auth)\n\n  return (\n    <div className='app'>\n       { isLoggedIn && <Navbar /> }\n      \n        <Switch>\n          {\n            !isLoggedIn &&\n              <Route path='/' exact>\n                <Login />\n              </Route>\n          }\n\n          {\n            !isLoggedIn &&\n              <Route path='/adminLogin'>\n                <AdminLogin />\n              </Route>\n          }\n\n          { \n            isLoggedIn && isAdmin && \n              <Route path='/' exact>\n                <Redirect to=\"/adminPanel\" />\n              </Route> \n          }\n\n          { \n            isLoggedIn && isAdmin && \n              <Route path='/reviewgames/:id' exact>\n                <ReviewGames />\n              </Route> \n          }\n\n          { \n            isLoggedIn && !isAdmin && \n              <Route path='/' exact>\n                <Quiz />\n              </Route> \n          }\n\n          { \n            isLoggedIn && !isAdmin && \n              <Route path='/settings'>\n                <Settings />\n              </Route> \n          }\n\n\n          { \n            isLoggedIn && isAdmin && \n              <Route path='/quotes'>\n                <Quotes />\n              </Route> \n          }\n\n          { \n            isLoggedIn && isAdmin && \n              <Route path='/editquote/:id'>\n                <EditQuote />\n              </Route> \n          }\n\n          { \n            isLoggedIn && isAdmin && \n              <Route path='/addquote'>\n                <AddQuote />\n              </Route> \n          }\n\n          { \n            isLoggedIn && isAdmin && \n              <Route path='/adminPanel'>\n                <AdminPanel />\n              </Route> \n          }\n\n          { \n            isLoggedIn && !isAdmin && \n              <Route path=\"/profile\">\n                <Profile />\n              </Route>\n          }      \n\n          <Route path=\"/noconfirmation\">\n            <Confirmation />\n          </Route>\n\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n\n          <Route path='*'>\n            <NotFound />\n          </Route>\n\n        </Switch>\n\n        <ToastContainer />\n      \n    </div>\n  );\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport authReducer from './authSlice/authSlice'\r\nimport gameModeSlice from './gameSlice/gameModeSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    gameMode: gameModeSlice\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.sass';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}